// Code generated by {{.Generator}}. DO NOT EDIT.
package {{.Package}}

import (
	"database/sql"
	"github.com/lib/pq"
)

const (
	modelTableName = "{{.TableName}}"
)

const (
	modelSQLSetup = "CREATE TABLE {{.TableName}} ({{.SQLSetup}});"
)

func modelSetup(db *sql.DB) error {
	_, err := db.Exec(modelSQLSetup)
	return err
}

const (
	modelSQLInsert = "INSERT INTO {{.TableName}} ({{.SQLDBNames}}) VALUES ({{.SQLPlaceholders}});"
)

func modelInsert(db *sql.DB, m *{{.ModelIdent}}) (int, error) {
	_, err := db.Exec(modelSQLInsert, {{.SQLIdents}})
	if err != nil {
		if postgresErr, ok := err.(*pq.Error); ok {
			switch postgresErr.Code {
			case "23505": // unique_violation
				return 3, err
			default:
				return 0, err
			}
		}
	}
	return 0, nil
}

const (
	modelSQLUpdate = "UPDATE {{.TableName}} SET ({{.SQLDBNames}}) = ({{.SQLPlaceholders}}) WHERE {{.PrimaryKey.DBName}} = {{.PKNum}};"
)

func modelUpdate(db *sql.DB, m *{{.ModelIdent}}) error {
	_, err := db.Exec(modelSQLUpdate, {{.SQLIdents}})
	return err
}

const (
	modelSQLDelete = "DELETE FROM {{.TableName}} WHERE {{.PrimaryKey.DBName}} = $1;"
)

func modelDelete(db *sql.DB, m *{{.ModelIdent}}) error {
	_, err := db.Exec(modelSQLDelete, m.{{.PrimaryKey.Ident}})
	return err
}
