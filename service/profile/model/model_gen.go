// Code generated by go generate. DO NOT EDIT.
package profilemodel

import (
	"database/sql"
	"github.com/lib/pq"
)

const (
	modelTableName = "profiles"
)

const (
	modelSQLSetup = "CREATE TABLE profiles (userid BYTEA PRIMARY KEY, contact_email VARCHAR(4096), bio VARCHAR(4096), profile_image_url VARCHAR(4096));"
)

func modelSetup(db *sql.DB) error {
	_, err := db.Exec(modelSQLSetup)
	return err
}

const (
	modelSQLGet = "SELECT userid, contact_email, bio, profile_image_url FROM profiles WHERE userid = $1;"
)

func modelGet(db *sql.DB, key []byte) (*Model, int, error) {
	m := &Model{}
	if err := db.QueryRow(modelSQLGet, key).Scan(&m.Userid, &m.Email, &m.Bio, &m.Image); err != nil {
		if err == sql.ErrNoRows {
			return nil, 2, err
		}
		return nil, 0, err
	}
	return m, 0, nil
}

const (
	modelSQLInsert = "INSERT INTO profiles (userid, contact_email, bio, profile_image_url) VALUES ($1, $2, $3, $4);"
)

func modelInsert(db *sql.DB, m *Model) (int, error) {
	_, err := db.Exec(modelSQLInsert, m.Userid, m.Email, m.Bio, m.Image)
	if err != nil {
		if postgresErr, ok := err.(*pq.Error); ok {
			switch postgresErr.Code {
			case "23505": // unique_violation
				return 3, err
			default:
				return 0, err
			}
		}
	}
	return 0, nil
}

const (
	modelSQLUpdate = "UPDATE profiles SET (userid, contact_email, bio, profile_image_url) = ($1, $2, $3, $4) WHERE userid = $1;"
)

func modelUpdate(db *sql.DB, m *Model) error {
	_, err := db.Exec(modelSQLUpdate, m.Userid, m.Email, m.Bio, m.Image)
	return err
}

const (
	modelSQLDelete = "DELETE FROM profiles WHERE userid = $1;"
)

func modelDelete(db *sql.DB, m *Model) error {
	_, err := db.Exec(modelSQLDelete, m.Userid)
	return err
}
